BOOKMARKET

=== WHAT IS IT?
A simple means of using a bookmark to add your javascript to an external page.
Think of your Del.ico.us bookmarking tool - it can be used to save information
to your site from any other site out there. Works with the restful_authentication
plugin.

=== HOW IT WORKS
The bookmark part simply 'injects' a .js file into the page, by adding it to
the HEAD element. Your users will put it in their toolbar, and click on it when
they want to use it.

=== WHAT CAN IT DO?
Short answer: Bookmark webpages to your application, save the url, title and description into
a model on your site.

The long answer: Anything you want! You can go ahead and add functionality to 
parse the page DOM with HPRICOT or anything else.

=== ONLINE DEMO
Coming soon!

=== INSTALLATION
First, you must have a restful_authentication user model. Install restful_authentication
and generate it. You should read more about this, but this is the simple version:
	1) ./script/plugin install git://github.com/technoweenie/restful-authentication.git	
	2) ./script/generate authenticated user sessions
	3) rake db:migrate
Add the line following line to your
include AuthenticatedSystem
to your ApplicationController class in the file app/controllers/application.rb
Start up your server and create a user account and login before proceeding. To create a user, go to users/new and create a username and password.

Then you can generate your bookmarking model! I'll call this one Bookmark, you can call it
Page, Favorite or anything else you want.
	1) ./script/plugin install git://github.com/andrewdrane/bookmarker.git
	2) ./script/generate bookmark Bookmark
	3) rake db:migrate

Now, fire up your local server, or restart it if you were allready running.
Then, point your browser to localhost:3000/bookmarks (or pages, or favorites, it's the 
plural of whatever you called your bookmarker). You will see a link to the bookmark tool.
If you are using FireFox, DRAG the link to the top of your screen. This will be your bookmark.
Then, open another page, and click the bookmark. YOu should see the bookmarker tool appear!

=== NOTES
I am building a very basic example of the tool. It can be used for much more
powerful things! You will notice that the URL of the script is a directory,
not a filename. This resolves some cross browser issues. For PHP, just make
a file called index.php and put it in that particular directory. For Rails,
create a controller method that renders the file like this:
render :file => "#{RAILS_ROOT}/public/adder.js"

=== THE BOOKMARK
The bookmark itself is simply a javascript href. Here is an example that's
broken up and commented for easy reading. (NOTE spaces MUST be replaced with %20)

javascript:(            #just like any other javascript href
function() {            #start the function call

var x=document.getElementsByTagName('head').item(0);  #Grab HEAD element
var so=document.createElement('script');              #Create SCRIPT element

var s='http://www.yoursite.com/adder/';             #URL for the JS file
if(typeof so !='object')                            #Make sure you can add it
    so=document.standardCreateElement('script');    #Create script element
    so.setAttribute('src',s);                       #Set src to your site
    so.setAttribute('type','text/javascript');      #Set proper type
    x.appendChild(so);                              #Append it to the HEAD
}
)();                                                #Execute the function

and the whole shebang uninterrupted
javascript:(function()%20{var%20x=document.getElementsByTagName('head').item(0);var%20so=document.createElement('script');var%20s='http://www.yoursite.com/adder/';if(typeof%20so%20!='object')%20so=document.standardCreateElement('script');so.setAttribute('src',s);so.setAttribute('type','text/javascript');x.appendChild(so);})();

=== SETUP
This bookmarker tool works with the excellent Restful Authentication plugin
First, you will need to install restful_authentication and create the user/session model.
 script/plugin install restful_authentication
then
 script/generate authenticated user sessions 
This is nice because it also creates a bunch of tests for you.

